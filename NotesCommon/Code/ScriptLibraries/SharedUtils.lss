'++LotusScript Development Environment:2:5:(Options):0:74
%REM
	Library SharedUtils
	Created Aug 2, 2013 by Mariusz Jakubowski
	Description: Misc utility functions.
%END REM
Option Public
Option Declare

Use "SharedCollections"



'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Public Sub OpenDocumentByUNID(AField As String, ADB As NotesDatabase)
Declare Public Function GetTempDir() As String
Declare Public Function ReplaceIfChanged(ADoc As NotesDocument, AField As String, ANewVal As Variant) As Boolean
Declare Public Function IsMember(ARole As String) As Boolean
Declare Public Function IsAdmin() As Boolean
Declare Public Function MakeProperFileName(AText As String) As String
Declare Public Function iif(ACondition As Boolean, ATrue As Variant, AFalse As Variant) As Variant

'++LotusScript Development Environment:2:5:(Declarations):0:2

'++LotusScript Development Environment:2:2:OpenDocumentByUNID:1:8
Public Sub OpenDocumentByUNID(AField As String, ADB As NotesDatabase)
    ' opens document using unid in field AField
    Dim w As New NotesUIWorkspace()
    Dim s As New NotesSession()
    Dim db As NotesDatabase
    Dim uidoc As NotesUIDocument
    Dim destDoc As NotesDocument
    Dim unid As String
    
    If ADB Is Nothing Then
        Set db = s.CurrentDatabase
    Else
        Set db = ADB
    End If
    Set uidoc = w.CurrentDocument
    unid = uidoc.Document.GetItemValue(AField)(0)
    If unid = "" Then Exit Sub
    Set destDoc = db.GetDocumentByUNID(unid)
    Call w.EditDocument(False, destDoc)
End Sub



'++LotusScript Development Environment:2:1:GetTempDir:4:8
%REM
	Returns directory used for storing temporary files.
%END REM
Public Function GetTempDir() As String
    GetTempDir = Environ("Temp")
End Function



'++LotusScript Development Environment:2:1:ReplaceIfChanged:11:8
%REM
	Compares old values from a document with new values. 
  If new values are different then it replaces the field on a document
  with new values and returns true.
  This function can be used to implement change logging or to decide if document requires saving.
  @param ADoc - a document where to check for old values
  @param AField - a name of a field with old values
  @param ANewVal - new value(s)
  @return true if values are different and were changed, false if values are identical 
%END REM
Public Function ReplaceIfChanged(ADoc As NotesDocument, AField As String, ANewVal As Variant) As Boolean
    On Error GoTo err1
    If Not CompareArrays(ADoc.GetItemValue(AField), ANewVal) Then
        Call ADoc.ReplaceItemValue(AField, ANewVal)
        ReplaceIfChanged = True
    Else
        ReplaceIfChanged = False
    End If
    Exit Function
err1:
    Call ADoc.ReplaceItemValue(AField, ANewVal)
    ReplaceIfChanged = True
    Exit Function
End Function



'++LotusScript Development Environment:2:1:IsMember:2:8
' Checks if user has a role.
Public Function IsMember(ARole As String) As Boolean
    Dim role As Variant
    role = Evaluate(|@IsMember("| + ARole + |"; @UserRoles)|)
    IsMember = role(0)
End Function



'++LotusScript Development Environment:2:1:IsAdmin:2:8
' Checks if user has [Admin] role.
Public Function IsAdmin() As Boolean
    Dim role As Variant   
    role = Evaluate(|@IsMember("[Admin]"; @UserRoles)|)
    IsAdmin = role(0)
End Function



'++LotusScript Development Environment:2:1:MakeProperFileName:6:8
%REM
	Makes a proper file name from a parameter.
	This function replaces all characters that are outside
	the range A-Z and 0-9 for a "_" character.
%END REM
Public Function MakeProperFileName(AText As String) As String
    Dim i As Integer
    Dim l As String 
    
    For i = 1 To Len(AText) 
        l = UCase(Mid$(AText, i, 1))
        If (l<"A" Or l>"Z") And (l<"0" Or l>"9") Then
            l = "_"
        End If
        MakeProperFileName = MakeProperFileName & l
    Next
End Function



'++LotusScript Development Environment:2:1:iif:5:8
%REM
    Returns one value if a specified condition evaluates to True, 
    or another value if it evaluates to False		
%END REM
Public Function iif(ACondition As Boolean, ATrue As Variant, AFalse As Variant) As Variant
    If ACondition Then
        iif = ATrue
    Else
        iif = AFalse
    End If
End Function

