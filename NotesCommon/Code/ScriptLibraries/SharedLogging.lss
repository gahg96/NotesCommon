'++LotusScript Development Environment:2:5:(Options):0:74
Option Public
Option Declare

%Include "LSCONST.LSS"

%REM

A library for logging error messages.

@Author
    MJA

%END REM



'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Sub Initialize
Declare Private Function GetErrorMessage(AMessage As String) As String
Declare Private Function ifTrue(ACondition As Boolean, AMsg As String) As String
Declare Public Sub RaiseError(AMessage As String)
Declare Public Sub PrintErrorMessage(AMessage As String)
Declare Public Sub ShowErrorMessage(AMessage As String)

'++LotusScript Development Environment:2:5:(Declarations):0:10
Private CurrentDatabase As NotesDatabase



'++LotusScript Development Environment:2:2:Initialize:1:10
Sub Initialize
    Dim s As New NotesSession()
    Set CurrentDatabase = s.CurrentDatabase
End Sub

'++LotusScript Development Environment:2:1:GetErrorMessage:4:8
%REM
    Composes an error message.
%END REM
Private Function GetErrorMessage(AMessage As String) As String
    GetErrorMessage = CurrentDatabase.FileName _
    & ": " & GetThreadInfo(LSI_THREAD_CALLPROC) _
    & ":" & Erl() _
    & ifTrue(Len(AMessage)>0, ":(" & AMessage & ")") _
    & ":" & Error$ _
    & " (Err# " & CStr(Err) & ")"
End Function


'++LotusScript Development Environment:2:1:ifTrue:1:8
Private Function ifTrue(ACondition As Boolean, AMsg As String) As String
    If ACondition Then
        ifTrue = AMsg
    Else
        ifTrue = ""
    End If
End Function



'++LotusScript Development Environment:2:2:RaiseError:4:8
%REM
    Rethrows an error message.	
%END REM
Public Sub RaiseError(AMessage As String)
    Error Err, GetErrorMessage(AMessage) 
End Sub


'++LotusScript Development Environment:2:2:PrintErrorMessage:4:8
%REM
	Prints an error message to a status bar.
%END REM
Public Sub PrintErrorMessage(AMessage As String)
    Print GetErrorMessage(AMessage)
End Sub


'++LotusScript Development Environment:2:2:ShowErrorMessage:4:8
%REM
	Shows an error message in a message box.
%END REM
Public Sub ShowErrorMessage(AMessage As String)
    MessageBox GetErrorMessage(AMessage), MB_OK Or MB_ICONSTOP, "Error"
End Sub
