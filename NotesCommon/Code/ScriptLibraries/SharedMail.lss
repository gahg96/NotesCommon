'++LotusScript Development Environment:2:5:(Options):0:74
%REM
	Mail sending classes.

    This library is used to create and send e-mails. It contains a global method SendMail 
    which simplifies sending emails. By calling this method you can set the body, subject 
    and recipients of an email and add a document or a database link. In the library there 
    are serveral classes used to set different types of the body of an email. An AbstractMail 
    class is a base class for all email classes. A Mail class is used to send standard Notes 
    emails. An HTMLMail is used to send emails in an HTML format. A FormMail is used 
    to send emails with a form attached or with a form rendered into a RichText item. 
	
%END REM
Option Public
Option Declare



'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Public Class AbstractMail
Declare Public Class Mail As AbstractMail   

'++LotusScript Development Environment:2:5:(Declarations):0:10
' image for document link encoded in base64 (used by html messages)
Const IMG_DOC_LINK_B64= "R0lGODlhEAARAMIEAAQCBPz+BISChMTCxP///////////////yH5BAEAAAQALAAAAAAQABEAAAM/"+_
"SLrc/g/ICQQEgeQghnWAJloeGAwol5VMuBFCLITta9NLiO4ogSsY0a3hEop+vhMvhSzafMTnpkmp" +_
"IiHYrCIBADs="

'---------------------------------------------------------------------------------------------------------------------------------

' mail priority
Public Const MAIL_PRIORITY_LOW = "L"
Public Const MAIL_PRIORITY_NORMAL = "N"
Public Const MAIL_PRIORITY_HIGH = "H"

' delivery reports
Public Const MAIL_DELIVERY_NONE = "N"
Public Const MAIL_DELIVERY_ON_FAILURE = "B"
Public Const MAIL_DELIVERY_CONFIRM = "C"
Public Const MAIL_DELIVERY_TRACE_PATH = "T"



%REM

    Abstract class for sending e-mails.

    @Abstract

%END REM
Public Class AbstractMail
    db As NotesDatabase     
    Public mailDoc As NotesDocument     ' mail document
    
    ' Creates new mail object.
    ' ADb - database in which mails will be created, if nothing current database is used
    Public Sub New(ADb As NotesDatabase)
        If ADb Is Nothing Then
            Dim session As NotesSession
            Set session = New NotesSession  
            Set db = session.CurrentDatabase    
        Else 
            Set db = ADb            
        End If
    End Sub
    
    ' Sets mail subject.
    Public Sub SetSubject(ASubject As String)
        mailDoc.Subject = ASubject
    End Sub
    
    ' Creates new mail document.
    Public Sub NewMail()
        Set mailDoc = db.CreateDocument
        mailDoc.Form = "Memo"       
    End Sub
    
    ' Sets mail content.
    ' @abstract
    Public Sub SetContent(ABody As String)
    End Sub
    
    ' Adds link to a document in mail.
    ' @abstract
    Public Sub AppendDocLink(ADoc As Variant, AComment As String)
    End Sub
    
    ' Embed an attachment.
    ' @abstract
    Public Sub Attach(AFile As String)
    End Sub
    
    ' Sends mail to recipients.
    Public Sub Send(ARecipients As Variant)
        Call mailDoc.Send(False, ARecipients)               
    End Sub
    
    ' Sets CC field.
    Public Sub SetCC(ACopyTo As Variant)
        mailDoc.CopyTo = ACopyTo
    End Sub
    
    ' Sets BCC field.
    Public Sub SetBCC(ACopyTo As Variant)
        mailDoc.BlindCopyTo = ACopyTo
    End Sub
    
    ' Sets the from field.
    Public Sub SetFrom(AFrom As Variant)
        mailDoc.Principal = AFrom
    End Sub
    
    ' Sets mail priority.
    ' @see MAIL_PRIORITY_*
    Public Sub SetPriority(APriority As String)
        mailDoc.DeliveryPriority = APriority
    End Sub
    
    ' Sets mail delivery option.
    ' @see MAIL_DELIVERY_*
    Public Sub SetDeliveryReport(AReport As String)
        mailDoc.DeliveryReport = AReport
    End Sub
    
    ' Sets return receipt flag.
    Public Sub SetReturnReceipt()
        mailDoc.ReturnReceipt = "1"
    End Sub
    
End Class


%REM

    A class for sending standard Lotus Notes mails.

%END REM
Public Class Mail As AbstractMail   
    Public body As NotesRichTextItem        ' mail body
    
    Public Sub New(ADb As NotesDatabase), AbstractMail(ADb)
    End Sub
    
    ' @override
    Public Sub NewMail()
        Call AbstractMail..NewMail()
        Set body = New NotesRichTextItem(mailDoc, "Body")   
    End Sub
    
    ' @override
    Public Sub SetContent(ABody As String)
        Call body.AppendText(ABody)
    End Sub
    
    ' @override
    Public Sub AppendDocLink(ADoc As Variant, AComment As String)
        Call body.AppendDocLink(ADoc, AComment)
    End Sub
    
    ' @override
    Public Sub Attach(AFile As String)
        Call body.EmbedObject(EMBED_ATTACHMENT, "", AFile)
    End Sub 
    
End Class
